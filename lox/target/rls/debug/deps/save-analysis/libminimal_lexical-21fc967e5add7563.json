{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2","program":"C:\\Users\\Lorenzo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","minimal_lexical","--edition=2018","C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=21fc967e5add7563","-C","extra-filename=-21fc967e5add7563","--out-dir","c:\\Lorenzo\\Sviluppo\\lox\\target\\rls\\debug\\deps","-L","dependency=c:\\Lorenzo\\Sviluppo\\lox\\target\\rls\\debug\\deps","--cap-lints","allow","--cfg","limb_width_64","--error-format=json","--sysroot","C:\\Users\\Lorenzo\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Lorenzo\\Sviluppo\\lox\\target\\rls\\debug\\deps\\libminimal_lexical-21fc967e5add7563.rmeta"},"prelude":{"crate_id":{"name":"minimal_lexical","disambiguator":[15228555344970733531,7751984660026539886]},"crate_root":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src","external_crates":[{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\math.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}}],"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":0,"byte_end":2236,"line_start":1,"line_end":85,"column_start":1,"column_end":34}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":2196,"byte_end":2201,"line_start":84,"line_end":84,"column_start":20,"column_end":25},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":2224,"byte_end":2235,"line_start":85,"line_end":85,"column_start":22,"column_end":33},"alias_span":null,"name":"parse_float","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":0,"byte_end":2236,"line_start":1,"line_end":85,"column_start":1,"column_end":34},"name":"","qualname":"::","value":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":18},{"krate":0,"index":53},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":69},{"krate":0,"index":83},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":118},{"krate":0,"index":239},{"krate":0,"index":358},{"krate":0,"index":372},{"krate":0,"index":377},{"krate":0,"index":400},{"krate":0,"index":406},{"krate":0,"index":453},{"krate":0,"index":458},{"krate":0,"index":489},{"krate":0,"index":490}],"decl_id":null,"docs":" Fast, minimal float-parsing algorithm.","sig":null,"attributes":[{"value":"/ Fast, minimal float-parsing algorithm.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":0,"byte_end":42,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":43,"byte_end":46,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ minimal-lexical has a simple, high-level API with a single","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":47,"byte_end":109,"line_start":3,"line_end":3,"column_start":1,"column_end":63}},{"value":"/ exported function: [`parse_float`].","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":110,"byte_end":149,"line_start":4,"line_end":4,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":150,"byte_end":153,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`parse_float`] expects a forward iterator for the integer","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":154,"byte_end":216,"line_start":6,"line_end":6,"column_start":1,"column_end":63}},{"value":"/ and fraction digits, as well as a parsed exponent as an [`i32`].","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":217,"byte_end":285,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":286,"byte_end":289,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For more examples, please see [simple-example](https://github.com/Alexhuszagh/minimal-lexical/blob/master/examples/simple.rs).","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":290,"byte_end":420,"line_start":9,"line_end":9,"column_start":1,"column_end":131}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":421,"byte_end":424,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ EXAMPLES","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":425,"byte_end":437,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/ --------","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":438,"byte_end":450,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":451,"byte_end":454,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":455,"byte_end":462,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ extern crate minimal_lexical;","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":463,"byte_end":496,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":497,"byte_end":500,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ // Let's say we want to parse \"1.2345\".","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":501,"byte_end":544,"line_start":17,"line_end":17,"column_start":1,"column_end":44}},{"value":"/ // First, we need an external parser to extract the integer digits (\"1\"),","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":545,"byte_end":622,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ // the fraction digits (\"2345\"), and then parse the exponent to a 32-bit","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":623,"byte_end":699,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ // integer (0).","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":700,"byte_end":719,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ // Warning:","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":720,"byte_end":735,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ // --------","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":736,"byte_end":751,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/ //  Please note that leading zeros must be trimmed from the integer,","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":752,"byte_end":824,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ //  and trailing zeros must be trimmed from the fraction. This cannot","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":825,"byte_end":898,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ //  be handled by minimal-lexical, since we accept iterators.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":899,"byte_end":964,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ let integer = b\"1\";","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":965,"byte_end":988,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ let fraction = b\"2345\";","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":989,"byte_end":1016,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/ let float: f64 = minimal_lexical::parse_float(integer.iter(), fraction.iter(), 0);","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":1017,"byte_end":1103,"line_start":28,"line_end":28,"column_start":1,"column_end":87}},{"value":"/ println!(\"float={:?}\", float);    // 1.235","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":1104,"byte_end":1150,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":1151,"byte_end":1158,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":1159,"byte_end":1162,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`parse_float`]: fn.parse_float.html","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":1163,"byte_end":1203,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/ [`i32`]: https://doc.rust-lang.org/stable/std/primitive.i32.html","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\lib.rs","byte_start":1204,"byte_end":1272,"line_start":33,"line_end":33,"column_start":1,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106636,"byte_end":106647,"line_start":50,"line_end":50,"column_start":11,"column_end":22},"name":"AsPrimitive","qualname":"::num::AsPrimitive","value":"AsPrimitive: Sized + Copy + PartialEq + PartialOrd + Send + Sync","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"decl_id":null,"docs":" Type that can be converted to primitive with `as`.\n","sig":null,"attributes":[{"value":"/ Type that can be converted to primitive with `as`.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106571,"byte_end":106625,"line_start":49,"line_end":49,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106710,"byte_end":106715,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"as_u8","qualname":"::num::AsPrimitive::as_u8","value":"pub fn as_u8(Self) -> u8","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106736,"byte_end":106742,"line_start":52,"line_end":52,"column_start":8,"column_end":14},"name":"as_u16","qualname":"::num::AsPrimitive::as_u16","value":"pub fn as_u16(Self) -> u16","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106764,"byte_end":106770,"line_start":53,"line_end":53,"column_start":8,"column_end":14},"name":"as_u32","qualname":"::num::AsPrimitive::as_u32","value":"pub fn as_u32(Self) -> u32","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106792,"byte_end":106798,"line_start":54,"line_end":54,"column_start":8,"column_end":14},"name":"as_u64","qualname":"::num::AsPrimitive::as_u64","value":"pub fn as_u64(Self) -> u64","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106820,"byte_end":106827,"line_start":55,"line_end":55,"column_start":8,"column_end":15},"name":"as_u128","qualname":"::num::AsPrimitive::as_u128","value":"pub fn as_u128(Self) -> u128","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106850,"byte_end":106858,"line_start":56,"line_end":56,"column_start":8,"column_end":16},"name":"as_usize","qualname":"::num::AsPrimitive::as_usize","value":"pub fn as_usize(Self) -> usize","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106882,"byte_end":106887,"line_start":57,"line_end":57,"column_start":8,"column_end":13},"name":"as_i8","qualname":"::num::AsPrimitive::as_i8","value":"pub fn as_i8(Self) -> i8","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106908,"byte_end":106914,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"as_i16","qualname":"::num::AsPrimitive::as_i16","value":"pub fn as_i16(Self) -> i16","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106936,"byte_end":106942,"line_start":59,"line_end":59,"column_start":8,"column_end":14},"name":"as_i32","qualname":"::num::AsPrimitive::as_i32","value":"pub fn as_i32(Self) -> i32","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106964,"byte_end":106970,"line_start":60,"line_end":60,"column_start":8,"column_end":14},"name":"as_i64","qualname":"::num::AsPrimitive::as_i64","value":"pub fn as_i64(Self) -> i64","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106992,"byte_end":106999,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"as_i128","qualname":"::num::AsPrimitive::as_i128","value":"pub fn as_i128(Self) -> i128","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":107022,"byte_end":107030,"line_start":62,"line_end":62,"column_start":8,"column_end":16},"name":"as_isize","qualname":"::num::AsPrimitive::as_isize","value":"pub fn as_isize(Self) -> isize","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":107054,"byte_end":107060,"line_start":63,"line_end":63,"column_start":8,"column_end":14},"name":"as_f32","qualname":"::num::AsPrimitive::as_f32","value":"pub fn as_f32(Self) -> f32","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":107082,"byte_end":107088,"line_start":64,"line_end":64,"column_start":8,"column_end":14},"name":"as_f64","qualname":"::num::AsPrimitive::as_f64","value":"pub fn as_f64(Self) -> f64","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":108804,"byte_end":108810,"line_start":146,"line_end":146,"column_start":11,"column_end":17},"name":"AsCast","qualname":"::num::AsCast","value":"AsCast: AsPrimitive","parent":null,"children":[{"krate":0,"index":262}],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[{"value":"/ An interface for casting between machine scalars.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":108740,"byte_end":108793,"line_start":145,"line_end":145,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":108953,"byte_end":108960,"line_start":149,"line_end":149,"column_start":8,"column_end":15},"name":"as_cast","qualname":"::num::AsCast::as_cast","value":"pub fn as_cast<N: AsPrimitive>(N) -> Self","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Creates a number from another value that can be converted into\n a primitive via the `AsPrimitive` trait.\n","sig":null,"attributes":[{"value":"/ Creates a number from another value that can be converted into","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":108830,"byte_end":108896,"line_start":147,"line_end":147,"column_start":5,"column_end":71}},{"value":"/ a primitive via the `AsPrimitive` trait.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":108901,"byte_end":108945,"line_start":148,"line_end":148,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":109654,"byte_end":109660,"line_start":179,"line_end":179,"column_start":11,"column_end":17},"name":"Number","qualname":"::num::Number","value":"Number: AsCast + ops::Add<Output = Self> + ops::AddAssign + ops::Div<Output = Self> +\nops::DivAssign + ops::Mul<Output = Self> + ops::MulAssign + ops::Rem<Output =\nSelf> + ops::RemAssign + ops::Sub<Output = Self> + ops::SubAssign","parent":null,"children":[],"decl_id":null,"docs":" Numerical type trait.\n","sig":null,"attributes":[{"value":"/ Numerical type trait.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":109618,"byte_end":109643,"line_start":178,"line_end":178,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111387,"byte_end":111392,"line_start":250,"line_end":250,"column_start":11,"column_end":16},"name":"Float","qualname":"::num::Float","value":"Float: Number + ops::Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"decl_id":null,"docs":" Get exact exponent limit for radix.\n","sig":null,"attributes":[{"value":"/ Get exact exponent limit for radix.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111337,"byte_end":111376,"line_start":249,"line_end":249,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111478,"byte_end":111486,"line_start":252,"line_end":252,"column_start":10,"column_end":18},"name":"Unsigned","qualname":"::num::Float::Unsigned","value":"type Unsigned: Integer;","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Unsigned type of the same size.\n","sig":null,"attributes":[{"value":"/ Unsigned type of the same size.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111433,"byte_end":111468,"line_start":251,"line_end":251,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111530,"byte_end":111534,"line_start":255,"line_end":255,"column_start":11,"column_end":15},"name":"ZERO","qualname":"::num::Float::ZERO","value":"Self","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Literal zero.\n","sig":null,"attributes":[{"value":"/ Literal zero.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111502,"byte_end":111519,"line_start":254,"line_end":254,"column_start":5,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112512,"byte_end":112522,"line_start":280,"line_end":280,"column_start":11,"column_end":21},"name":"MAX_DIGITS","qualname":"::num::Float::MAX_DIGITS","value":"usize","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Maximum number of digits that can contribute in the mantissa.","sig":null,"attributes":[{"value":"/ Maximum number of digits that can contribute in the mantissa.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111546,"byte_end":111611,"line_start":256,"line_end":256,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111616,"byte_end":111619,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ We can exactly represent a float in radix `b` from radix 2 if","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111624,"byte_end":111689,"line_start":258,"line_end":258,"column_start":5,"column_end":70}},{"value":"/ `b` is divisible by 2. This function calculates the exact number of","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111694,"byte_end":111765,"line_start":259,"line_end":259,"column_start":5,"column_end":76}},{"value":"/ digits required to exactly represent that float.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111770,"byte_end":111822,"line_start":260,"line_end":260,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111827,"byte_end":111830,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ According to the \"Handbook of Floating Point Arithmetic\",","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111835,"byte_end":111896,"line_start":262,"line_end":262,"column_start":5,"column_end":66}},{"value":"/ for IEEE754, with emin being the min exponent, p2 being the","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111901,"byte_end":111964,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/ precision, and b being the radix, the number of digits follows as:","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111969,"byte_end":112039,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112044,"byte_end":112047,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ `−emin + p2 + ⌊(emin + 1) log(2, b) − log(1 − 2^(−p2), b)⌋`","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112052,"byte_end":112127,"line_start":266,"line_end":266,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112132,"byte_end":112135,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ For f32, this follows as:","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112140,"byte_end":112169,"line_start":268,"line_end":268,"column_start":5,"column_end":34}},{"value":"/     emin = -126","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112174,"byte_end":112193,"line_start":269,"line_end":269,"column_start":5,"column_end":24}},{"value":"/     p2 = 24","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112198,"byte_end":112213,"line_start":270,"line_end":270,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112218,"byte_end":112221,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ For f64, this follows as:","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112226,"byte_end":112255,"line_start":272,"line_end":272,"column_start":5,"column_end":34}},{"value":"/     emin = -1022","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112260,"byte_end":112280,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/     p2 = 53","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112285,"byte_end":112300,"line_start":274,"line_end":274,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112305,"byte_end":112308,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ In Python:","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112313,"byte_end":112327,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/     `-emin + p2 + math.floor((emin+1)*math.log(2, b) - math.log(1-2**(-p2), b))`","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112332,"byte_end":112416,"line_start":277,"line_end":277,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112421,"byte_end":112424,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This was used to calculate the maximum number of digits for [2, 36].","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112429,"byte_end":112501,"line_start":279,"line_end":279,"column_start":5,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112590,"byte_end":112599,"line_start":285,"line_end":285,"column_start":11,"column_end":20},"name":"SIGN_MASK","qualname":"::num::Float::SIGN_MASK","value":"Self::Unsigned","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Bitmask for the sign bit.\n","sig":null,"attributes":[{"value":"/ Bitmask for the sign bit.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112550,"byte_end":112579,"line_start":284,"line_end":284,"column_start":5,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112687,"byte_end":112700,"line_start":287,"line_end":287,"column_start":11,"column_end":24},"name":"EXPONENT_MASK","qualname":"::num::Float::EXPONENT_MASK","value":"Self::Unsigned","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Bitmask for the exponent, including the hidden bit.\n","sig":null,"attributes":[{"value":"/ Bitmask for the exponent, including the hidden bit.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112621,"byte_end":112676,"line_start":286,"line_end":286,"column_start":5,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112816,"byte_end":112831,"line_start":289,"line_end":289,"column_start":11,"column_end":26},"name":"HIDDEN_BIT_MASK","qualname":"::num::Float::HIDDEN_BIT_MASK","value":"Self::Unsigned","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Bitmask for the hidden bit in exponent, which is an implicit 1 in the fraction.\n","sig":null,"attributes":[{"value":"/ Bitmask for the hidden bit in exponent, which is an implicit 1 in the fraction.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112722,"byte_end":112805,"line_start":288,"line_end":288,"column_start":5,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112930,"byte_end":112943,"line_start":291,"line_end":291,"column_start":11,"column_end":24},"name":"MANTISSA_MASK","qualname":"::num::Float::MANTISSA_MASK","value":"Self::Unsigned","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Bitmask for the mantissa (fraction), excluding the hidden bit.\n","sig":null,"attributes":[{"value":"/ Bitmask for the mantissa (fraction), excluding the hidden bit.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112853,"byte_end":112919,"line_start":290,"line_end":290,"column_start":5,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113026,"byte_end":113039,"line_start":296,"line_end":296,"column_start":11,"column_end":24},"name":"INFINITY_BITS","qualname":"::num::Float::INFINITY_BITS","value":"Self::Unsigned","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Positive infinity as bits.\n","sig":null,"attributes":[{"value":"/ Positive infinity as bits.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":112985,"byte_end":113015,"line_start":295,"line_end":295,"column_start":5,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113102,"byte_end":113124,"line_start":298,"line_end":298,"column_start":11,"column_end":33},"name":"NEGATIVE_INFINITY_BITS","qualname":"::num::Float::NEGATIVE_INFINITY_BITS","value":"Self::Unsigned","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Positive infinity as bits.\n","sig":null,"attributes":[{"value":"/ Positive infinity as bits.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113061,"byte_end":113091,"line_start":297,"line_end":297,"column_start":5,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113215,"byte_end":113228,"line_start":300,"line_end":300,"column_start":11,"column_end":24},"name":"MANTISSA_SIZE","qualname":"::num::Float::MANTISSA_SIZE","value":"i32","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Size of the significand (mantissa) without hidden bit.\n","sig":null,"attributes":[{"value":"/ Size of the significand (mantissa) without hidden bit.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113146,"byte_end":113204,"line_start":299,"line_end":299,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113273,"byte_end":113286,"line_start":302,"line_end":302,"column_start":11,"column_end":24},"name":"EXPONENT_BIAS","qualname":"::num::Float::EXPONENT_BIAS","value":"i32","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Bias of the exponet\n","sig":null,"attributes":[{"value":"/ Bias of the exponet","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113239,"byte_end":113262,"line_start":301,"line_end":301,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113349,"byte_end":113366,"line_start":304,"line_end":304,"column_start":11,"column_end":28},"name":"DENORMAL_EXPONENT","qualname":"::num::Float::DENORMAL_EXPONENT","value":"i32","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Exponent portion of a denormal float.\n","sig":null,"attributes":[{"value":"/ Exponent portion of a denormal float.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113297,"byte_end":113338,"line_start":303,"line_end":303,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113424,"byte_end":113436,"line_start":306,"line_end":306,"column_start":11,"column_end":23},"name":"MAX_EXPONENT","qualname":"::num::Float::MAX_EXPONENT","value":"i32","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Maximum exponent value in float.\n","sig":null,"attributes":[{"value":"/ Maximum exponent value in float.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113377,"byte_end":113413,"line_start":305,"line_end":305,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113540,"byte_end":113553,"line_start":311,"line_end":311,"column_start":11,"column_end":24},"name":"DEFAULT_SHIFT","qualname":"::num::Float::DEFAULT_SHIFT","value":"i32","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Default number of bits to shift (or 64 - mantissa size - 1).\n","sig":null,"attributes":[{"value":"/ Default number of bits to shift (or 64 - mantissa size - 1).","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113465,"byte_end":113529,"line_start":310,"line_end":310,"column_start":5,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113650,"byte_end":113660,"line_start":313,"line_end":313,"column_start":11,"column_end":21},"name":"CARRY_MASK","qualname":"::num::Float::CARRY_MASK","value":"u64","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Mask to determine if a full-carry occurred (1 in bit above hidden bit).\n","sig":null,"attributes":[{"value":"/ Mask to determine if a full-carry occurred (1 in bit above hidden bit).","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113564,"byte_end":113639,"line_start":312,"line_end":312,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113735,"byte_end":113749,"line_start":316,"line_end":316,"column_start":8,"column_end":22},"name":"exponent_limit","qualname":"::num::Float::exponent_limit","value":"pub fn exponent_limit() -> (i32, i32)","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Get min and max exponent limits (exact) from radix.\n","sig":null,"attributes":[{"value":"/ Get min and max exponent limits (exact) from radix.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113672,"byte_end":113727,"line_start":315,"line_end":315,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113855,"byte_end":113869,"line_start":319,"line_end":319,"column_start":8,"column_end":22},"name":"mantissa_limit","qualname":"::num::Float::mantissa_limit","value":"pub fn mantissa_limit() -> i32","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Get the number of digits that can be shifted from exponent to mantissa.\n","sig":null,"attributes":[{"value":"/ Get the number of digits that can be shifted from exponent to mantissa.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113772,"byte_end":113847,"line_start":318,"line_end":318,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113925,"byte_end":113930,"line_start":322,"line_end":322,"column_start":8,"column_end":13},"name":"pow10","qualname":"::num::Float::pow10","value":"pub fn pow10(Self, i32) -> Self","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":113961,"byte_end":113970,"line_start":323,"line_end":323,"column_start":8,"column_end":17},"name":"from_bits","qualname":"::num::Float::from_bits","value":"pub fn from_bits(Self::Unsigned) -> Self","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114006,"byte_end":114013,"line_start":324,"line_end":324,"column_start":8,"column_end":15},"name":"to_bits","qualname":"::num::Float::to_bits","value":"pub fn to_bits(Self) -> Self::Unsigned","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114046,"byte_end":114062,"line_start":325,"line_end":325,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::num::Float::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114085,"byte_end":114101,"line_start":326,"line_end":326,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::num::Float::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114188,"byte_end":114199,"line_start":330,"line_end":330,"column_start":8,"column_end":19},"name":"is_denormal","qualname":"::num::Float::is_denormal","value":"pub fn is_denormal(Self) -> bool","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Returns true if the float is a denormal.\n","sig":null,"attributes":[{"value":"/ Returns true if the float is a denormal.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114122,"byte_end":114166,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114171,"byte_end":114180,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114369,"byte_end":114379,"line_start":336,"line_end":336,"column_start":8,"column_end":18},"name":"is_special","qualname":"::num::Float::is_special","value":"pub fn is_special(Self) -> bool","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Returns true if the float is a NaN or Infinite.\n","sig":null,"attributes":[{"value":"/ Returns true if the float is a NaN or Infinite.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114296,"byte_end":114347,"line_start":334,"line_end":334,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114352,"byte_end":114361,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114534,"byte_end":114540,"line_start":342,"line_end":342,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::num::Float::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Returns true if the float is NaN.\n","sig":null,"attributes":[{"value":"/ Returns true if the float is NaN.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114475,"byte_end":114512,"line_start":340,"line_end":340,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114517,"byte_end":114526,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114724,"byte_end":114730,"line_start":348,"line_end":348,"column_start":8,"column_end":14},"name":"is_inf","qualname":"::num::Float::is_inf","value":"pub fn is_inf(Self) -> bool","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Returns true if the float is infinite.\n","sig":null,"attributes":[{"value":"/ Returns true if the float is infinite.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114660,"byte_end":114702,"line_start":346,"line_end":346,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114707,"byte_end":114716,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114914,"byte_end":114922,"line_start":354,"line_end":354,"column_start":8,"column_end":16},"name":"exponent","qualname":"::num::Float::exponent","value":"pub fn exponent(Self) -> i32","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Get exponent component from the float.\n","sig":null,"attributes":[{"value":"/ Get exponent component from the float.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114850,"byte_end":114892,"line_start":352,"line_end":352,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":114897,"byte_end":114906,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":115276,"byte_end":115284,"line_start":366,"line_end":366,"column_start":8,"column_end":16},"name":"mantissa","qualname":"::num::Float::mantissa","value":"pub fn mantissa(Self) -> Self::Unsigned","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Get mantissa (significand) component from float.\n","sig":null,"attributes":[{"value":"/ Get mantissa (significand) component from float.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":115202,"byte_end":115254,"line_start":364,"line_end":364,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":115259,"byte_end":115268,"line_start":365,"line_end":365,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":115628,"byte_end":115641,"line_start":379,"line_end":379,"column_start":8,"column_end":21},"name":"next_positive","qualname":"::num::Float::next_positive","value":"pub fn next_positive(Self) -> Self","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Get next greater float for a positive float.\n Value must be >= 0.0 and < INFINITY.\n","sig":null,"attributes":[{"value":"/ Get next greater float for a positive float.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":115513,"byte_end":115561,"line_start":376,"line_end":376,"column_start":5,"column_end":53}},{"value":"/ Value must be >= 0.0 and < INFINITY.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":115566,"byte_end":115606,"line_start":377,"line_end":377,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":115611,"byte_end":115620,"line_start":378,"line_end":378,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":115862,"byte_end":115881,"line_start":386,"line_end":386,"column_start":8,"column_end":27},"name":"round_positive_even","qualname":"::num::Float::round_positive_even","value":"pub fn round_positive_even(Self) -> Self","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Round a positive number to even.\n","sig":null,"attributes":[{"value":"/ Round a positive number to even.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":115804,"byte_end":115840,"line_start":384,"line_end":384,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":115845,"byte_end":115854,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\parse.rs","byte_start":123967,"byte_end":123978,"line_start":51,"line_end":51,"column_start":8,"column_end":19},"name":"parse_float","qualname":"::parse::parse_float","value":"pub fn parse_float<'a, F, Iter1, Iter2>(Iter1, Iter2, i32) -> F where\nF: Float, Iter1: Iterator<Item = &'a u8> + Clone, Iter2: Iterator<Item =\n&'a u8> + Clone","parent":null,"children":[],"decl_id":null,"docs":" Parse float from extracted float components.","sig":null,"attributes":[{"value":"/ Parse float from extracted float components.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\parse.rs","byte_start":123495,"byte_end":123543,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\parse.rs","byte_start":123544,"byte_end":123547,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ * `integer`     - Cloneable, forward iterator over integer digits.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\parse.rs","byte_start":123548,"byte_end":123618,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/ * `fraction`    - Cloneable, forward iterator over integer digits.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\parse.rs","byte_start":123619,"byte_end":123689,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ * `exponent`    - Parsed, 32-bit exponent.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\parse.rs","byte_start":123690,"byte_end":123736,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\parse.rs","byte_start":123737,"byte_end":123740,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Preconditions","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\parse.rs","byte_start":123741,"byte_end":123760,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ 1. The integer should not have leading zeros.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\parse.rs","byte_start":123761,"byte_end":123810,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/ 2. The fraction should not have trailing zeros.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\parse.rs","byte_start":123811,"byte_end":123862,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\parse.rs","byte_start":123863,"byte_end":123866,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ We cannot efficiently remove trailing zeros while only accepting a","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\parse.rs","byte_start":123867,"byte_end":123937,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/ forward iterator.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\parse.rs","byte_start":123938,"byte_end":123959,"line_start":50,"line_end":50,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\slice.rs","byte_start":200367,"byte_end":200373,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Output","qualname":"::slice::RSliceIndex::Output","value":"type Output: ?Sized;","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Output type for the index.\n","sig":null,"attributes":[{"value":"/ Output type for the index.","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\slice.rs","byte_start":200327,"byte_end":200357,"line_start":9,"line_end":9,"column_start":5,"column_end":35}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\bignum.rs","byte_start":15716,"byte_end":15722,"line_start":12,"line_end":12,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\bignum.rs","byte_start":15981,"byte_end":15987,"line_start":23,"line_end":23,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\float.rs","byte_start":28756,"byte_end":28769,"line_start":19,"line_end":19,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\math.rs","byte_start":75857,"byte_end":75868,"line_start":327,"line_end":327,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\math.rs","byte_start":76555,"byte_end":76566,"line_start":344,"line_end":344,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\slice.rs","byte_start":202199,"byte_end":202210,"line_start":78,"line_end":78,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\slice.rs","byte_start":203577,"byte_end":203580,"line_start":144,"line_end":144,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\bignum.rs","byte_start":15716,"byte_end":15722,"line_start":12,"line_end":12,"column_start":18,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":491},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\bignum.rs","byte_start":15981,"byte_end":15987,"line_start":23,"line_end":23,"column_start":15,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":491},"to":{"krate":0,"index":223}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\float.rs","byte_start":28756,"byte_end":28769,"line_start":19,"line_end":19,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\math.rs","byte_start":70510,"byte_end":70515,"line_start":140,"line_end":140,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":435},"to":{"krate":0,"index":146}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\math.rs","byte_start":75857,"byte_end":75868,"line_start":327,"line_end":327,"column_start":13,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\math.rs","byte_start":76555,"byte_end":76566,"line_start":344,"line_end":344,"column_start":22,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":168},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\math.rs","byte_start":97343,"byte_end":97348,"line_start":997,"line_end":997,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1742},"to":{"krate":0,"index":223}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\math.rs","byte_start":97351,"byte_end":97356,"line_start":997,"line_end":997,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":223}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\math.rs","byte_start":97359,"byte_end":97366,"line_start":997,"line_end":997,"column_start":40,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2033},"to":{"krate":0,"index":223}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106649,"byte_end":106654,"line_start":50,"line_end":50,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":245}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106657,"byte_end":106661,"line_start":50,"line_end":50,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":245}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106664,"byte_end":106673,"line_start":50,"line_end":50,"column_start":39,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":245}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106676,"byte_end":106686,"line_start":50,"line_end":50,"column_start":51,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":1807},"to":{"krate":0,"index":245}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106689,"byte_end":106693,"line_start":50,"line_end":50,"column_start":64,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":245}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":106696,"byte_end":106700,"line_start":50,"line_end":50,"column_start":71,"column_end":75},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":245}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":108812,"byte_end":108823,"line_start":146,"line_end":146,"column_start":19,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":245},"to":{"krate":0,"index":261}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":109666,"byte_end":109672,"line_start":180,"line_end":180,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":0,"index":261},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":109684,"byte_end":109687,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2110},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":109714,"byte_end":109723,"line_start":182,"line_end":182,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2141},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":109735,"byte_end":109738,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2125},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":109765,"byte_end":109774,"line_start":184,"line_end":184,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2153},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":109786,"byte_end":109789,"line_start":185,"line_end":185,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2120},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":109816,"byte_end":109825,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2149},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":109837,"byte_end":109840,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2131},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":109867,"byte_end":109876,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2157},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":109888,"byte_end":109891,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2115},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":109918,"byte_end":109927,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2145},"to":{"krate":0,"index":265}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":110189,"byte_end":110195,"line_start":205,"line_end":205,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":0,"index":265},"to":{"krate":0,"index":267}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":110207,"byte_end":110213,"line_start":206,"line_end":206,"column_start":12,"column_end":18},"kind":"SuperTrait","from":{"krate":2,"index":2166},"to":{"krate":0,"index":267}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":110240,"byte_end":110252,"line_start":207,"line_end":207,"column_start":12,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2193},"to":{"krate":0,"index":267}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":110264,"byte_end":110269,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":2171},"to":{"krate":0,"index":267}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":110296,"byte_end":110307,"line_start":209,"line_end":209,"column_start":12,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2197},"to":{"krate":0,"index":267}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":110319,"byte_end":110322,"line_start":210,"line_end":210,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2187},"to":{"krate":0,"index":267}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":110354,"byte_end":110363,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2210},"to":{"krate":0,"index":267}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":110380,"byte_end":110383,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":267}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":110415,"byte_end":110424,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2205},"to":{"krate":0,"index":267}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":110720,"byte_end":110727,"line_start":229,"line_end":229,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":267},"to":{"krate":0,"index":270}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111394,"byte_end":111400,"line_start":250,"line_end":250,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":265},"to":{"krate":0,"index":281}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\num.rs","byte_start":111408,"byte_end":111411,"line_start":250,"line_end":250,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2137},"to":{"krate":0,"index":281}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\slice.rs","byte_start":202199,"byte_end":202210,"line_start":78,"line_end":78,"column_start":35,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":2323}},{"span":{"file_name":"C:\\Users\\Lorenzo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\minimal-lexical-0.1.2\\src\\slice.rs","byte_start":203577,"byte_end":203580,"line_start":144,"line_end":144,"column_start":34,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":435}}]}