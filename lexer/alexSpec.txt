$digit      = [0-9]
$octdig     = [0-7]
$hexdig     = [0-9A-Fa-f]
$special    = [\.\;\,\$\|\*\+\?\#\~\-\{\}\(\)\[\]\^\/]
$graphic    = $printable # $white

@string     = \" ($graphic # \")*\"
@id         = [A-Za-z][A-Za-z’_]*
@smac       = ’$’ id
@rmac       = ’@’ id
@char       = ($graphic # $special) | @escape
@escape     = ’\\’ ($printable | ’x’ $hexdig+ | ’o’ $octdig+ | $digit+)
@code       = -- curly braces surrounding a Haskell code fragment"

alex := [ @code ] [ wrapper ] { macrodef } @id ’:-’ { rule } [ @code ]

wrapper := ’%wrapper’ @string

macrodef := @smac ’=’ set
          | @rmac ’=’ regexp

rule := [ startcodes ] token
      | startcodes ’{’ { token } ’}’
token := [ left_ctx ] regexp [ right_ctx ]  rhs
rhs := @code | ’;’
left_ctx := '^'
          | set '^'
right_ctx := '$'
           | '/' regexp
           | '/' @code

